$maxWidth: 1920; // обязательно для адаптивного шрифта и адаптивного свойства
$maxWidthContainer: 1440; // обязательно для адаптивного шрифта и адаптивного свойства

// Адаптивное свойство

@mixin adaptive ($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    // Только если больше контейнера 
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

// ===================================================================================================================================================

// Адаптивный шрифт

@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }

  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}


.header {
  padding: 15px 0;
  background-color: transparent;

  &__container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  &__menu {
    @media (max-width: 991px) {
      display: flex;
      flex-direction: column;
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-color: #373737;
      z-index: 100;
      @include adaptive ("padding", 30, 15, 0);
      opacity: 0;
      visibility: hidden;
      pointer-events: none;
      overflow: auto;
      transition: opacity .2s ease-in-out, visibility .2s ease-in-out, pointer-events .2s ease-in-out;
    }
  }

  &__exit-menu {
    display: none;
    position: absolute;
    width: 30px;
    height: 30px;
    background-color: transparent;

    @media (max-width: 991px) {
      display: block;
      @include adaptive ("top", 30, 15, 0);
      @include adaptive ("right", 30, 15, 0);
    }

    &::before {
      content: "";
      position: absolute;
      top: 12px;
      left: 0;
      width: 100%;
      height: 1px;
      background-color: #FFFFFF;
      transform: rotate(45deg);
    }

    &::after {
      content: "";
      position: absolute;
      top: 12px;
      right: 0;
      width: 100%;
      height: 1px;
      background-color: #FFFFFF;
      transform: rotate(-45deg);
    }
  }
}

.burger {
  display: none;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
  width: 52px;
  height: 25px;
  background-color: transparent;

  @media (max-width: 991px) {
    display: flex;
  }

  & span {
    display: block;
    width: 100%;
    height: 3px;
    background-color: #373737;
    margin-bottom: 5px;

    &:first-child {
      margin-bottom: 5px;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }
}

.menu-active {
  opacity: 1;
  visibility: visible;
  pointer-events: visible;
}